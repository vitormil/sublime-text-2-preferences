[
    // Main Hayaku context
    {
        "keys": ["tab"],
        "command": "hayaku",
        "context": [{"key": "hayaku_css_context"}]
    }

    // tab or enter at the end of a line should jump to a correct line
    , {
        "keys": ["tab"],
        "command": "hayaku_add_line",
        "context":[
            { "key": "selector", "operator": "equal", "operand": "source.css" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": ";$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}|$", "match_all": true }
        ]
    }
    , {
        "keys": ["enter"],
        "command": "hayaku_add_line",
        "context":[
            { "key": "selector", "operator": "equal", "operand": "source.css" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": ";$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}|$", "match_all": true }
        ]
    }

    // Temporary fix for the semicolon inserting (bad bad whitespace after)
    , { "keys": [":"], "command": "insert_snippet", "args": {"contents": ":$0"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.css - meta.selector.css", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\}|$)", "match_all": true }
        ]
    }

    // Temporary inline comment for CSS (would be replaced by a more useful command)
    , {
        "keys": ["/","/"],
        "command": "insert_snippet",
        "args": {"contents": "/* ${1}Â */$0"},
        "context": [{ "key": "selector", "operator": "equal", "operand": "source.css -comment.block.css", "match_all": true }]
    }

    // Command for inserting CSS code block
    , {
        "keys":    ["ctrl+enter"],
        "command":  "hayaku_add_code_block",
        "context": [
            {"key": "hayaku_add_code_block"},
            {"key": "hayaku_at_css"},
            {"key": "hayaku_single_caret"}
        ]
    }

    // Command for inserting right indent for code block by enter in braces
    , {
        "keys":    ["enter"],
        "command":  "hayaku_expand_code_block",
        "context": [
            {"key": "hayaku_at_css"},
            {"key": "hayaku_single_caret"},
            {"key": "preceding_text", "operator": "regex_match", "operand": ".*\\{$" },
            {"key": "following_text", "operator": "regex_match", "operand": "^\\}" }
        ]
    }
]
